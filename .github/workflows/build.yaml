name: "Build NH"

on:
  pull_request:
  push:
    branches-ignore:
      - 'update-*'
  workflow_dispatch:

jobs:
  x86_64-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Install Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - run: nix build github:$GITHUB_REPOSITORY/$GITHUB_SHA --json | nix run nixpkgs#jq -- -r '.[].outputs | to_entries[].value' | nix run nixpkgs#cachix push toyvo
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  aarch64-linux:
    runs-on: [self-hosted, linux, ARM64]

    steps:
      - run: nix build github:$GITHUB_REPOSITORY/$GITHUB_SHA --json | nix run nixpkgs#jq -- -r '.[].outputs | to_entries[].value' | nix run nixpkgs#cachix push toyvo
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  aarch64-darwin:
    runs-on: [self-hosted, macOS, ARM64]

    steps:
      - run: nix build github:$GITHUB_REPOSITORY/$GITHUB_SHA --json | nix run nixpkgs#jq -- -r '.[].outputs | to_entries[].value' | nix run nixpkgs#cachix push toyvo
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  x86_64-darwin:
    runs-on: [self-hosted, macOS, x64]

    steps:
      - run: nix build github:$GITHUB_REPOSITORY/$GITHUB_SHA --json | nix run nixpkgs#jq -- -r '.[].outputs | to_entries[].value' | nix run nixpkgs#cachix push toyvo
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
